
2024/6/13

paillier_demo有以下内容：
1. 为进行功能测试完善了task_req的写法。按原代码要求task_req应该一直被置为高。
2. 验证代码功能，确定模幂运算可以正常进行。
3. 运算功能中的加密功能已经得到验证，功能正确。由于同态乘加各自需要模乘和模幂运算，因此实际已经完成三个功能的调试。
4. 已安置除法器，将会进行解密功能的调试。（本程序将会在proj内生成一个解密模块的调试）
5. 6.13下午解密模块已调试完成。计算功能可以正常进行。目前四个电路功能模块已全部可以实现。
存在的问题如下：
1. 功能有待完善：
    加密电路，涉及两个模幂运算，根据数据大小不同，需要协调两次运算过程，目前仅测试功能正确性，未进行具体协调。
    解密电路，基本功能无误。模幂运算耗时较大。
    同态加法，实则为一次模乘运算，调用模乘module即可。但不确定大组数据性能是否较差。
    同态数乘，实则为一次模幂预算，调用模幂module即可。但本身模幂性能较差，latency较大。
2. 电路需进行优化，目前的latency偏大。完全未进行过优化。
3. 出于对优化资源的考虑，不可能为每个模块单独生成一个block，因此需要对模块进行复用。如何考虑信号接入问题。
   将四组功能集成在同一个block上。
解决方法：
1. 复用+集成四个运算功能在同一个block上，借用MUX对输入输出信号进行选择。同时借助ENBALE/DISABLE功能使能/取消不使用的block。
2. pipeline结构。
-> 解密运算需要三级：模幂->除法->模乘
-> 加密运算需要两级：模幂->模乘（当前方案例化两个，进行参数g优化策略后将进一步优化一次模幂运算）
-> 同态加法不需要流水线，仅一级运算
-> 同态乘法不需要流水线，仅以及运算
3. 参数g优化策略，将使得解密运算在保证两级流水的同时，减少一次模乘运算。从而降低复杂运算造成的delay。
c = g^m*r^n mod n^2 => c = (n*m+1)*r^n mod n^2

*4. 对模幂模乘的实现模块，可能需要再进一步简化。模乘部分有一个华为赛的高性能模乘实现，可供参考。 

paillier_demo_decry_top：解密模块的顶层，对应tb目录下的tb文件
paillier_demo_top: 加密模块的顶层，对应tb目录下的tb文件


 |—————————————|         |——————————|        |—————————————|         |——————————|        |—————————————|   
 |             |         |          |        |             |         |          |        |             |   
 |             |         |          |        |             |         |          |  ——>   |             |   
 |             |   ——>   |          |  ——>   |             |  ——>    |          |        |             |   
 |             |         |          |        |             |         |          |        |             |   
 |—————————————|         |          |        |—————————————|         |          |        |             |   
                         |          |                                |          |        |             |   
                         |          |                                |          |        |             |   
 |—————————————|         |          |        |—————————————|         |          |        |             |   
 |             |         |          |        |             |         |          |  ——>   |             |   
 |             |   ——>   |          |  ——>   |             |  ——>    |          |        |             |   
 |             |         |          |        |             |         |          |        |             |   
 |             |         |          |        |             |         |          |        |             |   
 |—————————————|         |——————————|        |—————————————|         |——————————|        |—————————————|   
      mod_exp             exp_to_cal           cal_mul_div           cal_to_modmul           mod_mul
      stage1                                     stage2                                      stage3





2024/6/14

将要实现的内容：
1. 借助MUX功能描述，按照未进行g参数优化的版本进行例化。两个模幂模块，一个除法器模块，一个模乘模块
2. tb测试MUX设计后的电路功能是否能够实现四组不同运算的切换
3. 在MUX设计完成的基础上添加中间件，完成顶层三级pipeline的设计



      
       